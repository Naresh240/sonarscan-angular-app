stages:
  - build
  - test
  - quality_gate

variables:
  SONAR_URL: "http://18.207.213.195:9000"
  PROJECT_KEY: "angularproject"
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
  GIT_DEPTH: "0"
  COVERAGE_THRESHOLD: "60.0"
  COVERAGE_FILE: "coverage/lcov.info"

.default_node_image: &default_node_image
  image:
    name: node:20
    entrypoint: [""]

.common_tools: &common_tools
  before_script:
    - apt-get update && apt-get install -y chromium wget unzip bc
    - ln -s /usr/bin/chromium /usr/bin/google-chrome || true
    - export CHROME_BIN=/usr/bin/chromium
    - npm ci

# -------------------------
# Build Stage
# -------------------------
build:
  stage: build
  <<: *default_node_image
  <<: *common_tools
  script:
    - echo "🚀 Building Angular app..."
    - npx ng build --configuration production
  artifacts:
    paths:
      - node_modules/
      - dist/
    expire_in: 1 hour

# -------------------------
# Test Stage (Coverage Validation)
# -------------------------
test:
  stage: test
  <<: *default_node_image
  <<: *common_tools
  dependencies:
    - build
  script:
    - npx ng test --watch=false --browsers=ChromeHeadlessCI --code-coverage
    - |
      if [ ! -f "coverage/lcov.info" ]; then
        echo "❌ coverage/lcov.info not found"
        exit 1
      fi

      TOTAL_LINES=$(grep -c "^DA:" coverage/lcov.info)
      COVERED_LINES=$(grep -c "^DA:[0-9]*,[1-9][0-9]*" coverage/lcov.info)
      COVERAGE=$(echo "scale=2; 100 * $COVERED_LINES / $TOTAL_LINES" | bc)

      echo "Coverage = $COVERAGE%"

      if (( $(echo "$COVERAGE < $COVERAGE_THRESHOLD" | bc -l) )); then
        echo "❌ Failing because coverage ($COVERAGE%) < threshold ($COVERAGE_THRESHOLD%)"
        exit 1
      else
        echo "✅ Coverage OK"
      fi
  artifacts:
    paths:
      - coverage/
    expire_in: 1 hour

# -------------------------
# Quality Gate (SonarQube + Coverage)
# -------------------------
quality_gate:
  stage: quality_gate
  image: sonarsource/sonar-scanner-cli:latest
  dependencies:
    - test
  script:
    - echo "📡 Running SonarQube analysis..."
    - |
      if [ ! -f "$COVERAGE_FILE" ]; then
        echo "❌ No lcov.info found for SonarQube at $COVERAGE_FILE"; exit 1;
      fi

      sonar-scanner \
        -Dsonar.projectKey=$PROJECT_KEY \
        -Dsonar.host.url=$SONAR_URL \
        -Dsonar.login=$SONAR_TOKEN \
        -Dsonar.sources=src \
        -Dsonar.tests=src \
        -Dsonar.test.inclusions="**/*.spec.ts" \
        -Dsonar.inclusions="src/app/app.ts" \
        -Dsonar.javascript.lcov.reportPaths=$COVERAGE_FILE


  artifacts:
    paths:
      - coverage/
    expire_in: 1 hour
